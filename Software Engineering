What is SDLC?
Ans : SDLC is a systematic process for building software that ensures the quality and correctness of the software built. SDLC process aims to produce high-quality
       software that meets customer expectations. The system development should be complete in the pre-defined time frame and cost. SDLC consists of a detailed plan 
        which explains how to plan, build, and maintain specific software. Every phase of the SDLC life Cycle has its own process and deliverables that feed into the next phase.
        SDLC stands for Software Development Life Cycle and is also referred to as the Application Development life-cycle.
        
        
    IMPORTANCE
        It offers a basis for project planning, scheduling, and estimating
        Provides a framework for a standard set of activities and deliverables
        It is a mechanism for project tracking and control
        Increases visibility of project planning to all involved stakeholders of the development process
        Increased and enhance development speed
        Improved client relations
        Helps you to decrease project risk and project management plan overhead
    
    
    SDLC Phases:
        Phase 1: Requirement collection and analysis
        Phase 2: Feasibility study:
        Phase 3: Design:
        Phase 4: Coding:
        Phase 5: Testing:
        Phase 6: Installation/Deployment:
        Phase 7: Maintenance
        
Qus: SDLC models ?
Ans:
1) Waterfall model: The waterfall is a widely accepted SDLC model. In this approach, the whole process of the software development is divided into various phases of SDLC.
                    In this SDLC model, the outcome of one phase acts as the input for the next phase.

2) Incremental Model: The incremental model is not a separate model. It is essentially a series of waterfall cycles. The requirements are divided into groups at the start 
                      of the project. For each group, the SDLC model is followed to develop software. The SDLC process is repeated, with each release adding more functionality 
                      until all requirements are met. In this method, every cycle act as the maintenance phase for the previous software release. Modification to the incremental
                      model allows development cycles to overlap. After that subsequent cycle may begin before the previous cycle is complete.
                      
3)V-Model: In this type of SDLC model testing and the development, the phase is planned in parallel. So, there are verification phases of sdlc on the side and the 
            validation phase on the other side. V-Model joins by Coding phase.
            
4) Agile Model: Agile methodology is a practice which promotes continue interaction of development and testing during the SDLC process of any project. 
                In the Agile method, the entire project is divided into small incremental builds. All of these builds are provided in iterations, and each iteration
                lasts from one to three weeks.
                Small projects can be implemented very quickly. For large projects, it is difficult to estimate the development time.
                Testers and developers work together.
                
 5) Spiral Model: The spiral model is a risk-driven process model. This SDLC model helps the team to adopt elements of one or more process models like a waterfall,
                   incremental, waterfall, etc.
                   This model adopts the best features of the prototyping model and the waterfall model. The spiral methodology is a combination of rapid prototyping
                   and concurrency in design and development activities.
                   
 6) Big bang model: Big bang model is focusing on all types of resources in software development and coding, with no or very little planning. The requirements are
                    understood and implemented when they come.
                    This model works best for small projects with smaller size development team which are working together. It is also useful for academic software
                    development projects. It is an ideal model where requirements is either unknown or final release date is not given.
